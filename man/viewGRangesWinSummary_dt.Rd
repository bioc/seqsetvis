% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_fetch_signal.R
\name{viewGRangesWinSummary_dt}
\alias{viewGRangesWinSummary_dt}
\title{Summarizes signal in bins.  The same number of bins per region in qgr is used
and widths can vary in qgr, in contrast to
\code{\link{viewGRangesWinSample_dt}} where width must be constant across
regions.}
\usage{
viewGRangesWinSummary_dt(attrib_gr, qgr, n_tiles = 100,
  attrib_name = "score", attrib_type = NULL, fill_value = 0,
  anchor = c("center", "center_unstranded", "left",
  "left_unstranded")[1], summary_FUN = stats::weighted.mean)
}
\arguments{
\item{qgr}{regions to view by window.}

\item{n_tiles}{numeric >= 1, the number of tiles to use for every region in
qgr.}

\item{attrib_name}{character name of attribute to pull data from. Default is
"score", compatible with with bigWigs or bam coverage.}

\item{attrib_type}{one of NULL, qualitative or quantitative.  If NULL will
attempt to guess by casting attrib_name attribute to character or factor.
Default is NULL.}

\item{fill_value}{value to substitute for missing ranges.  Default is 0 but
will switch to "MISSING" if data is guessed to me qualitative.}

\item{anchor}{character. controls how x value is derived from position for
each region in qgr.  0 may be the left side or center.  If not unstranded,
x coordinates are flipped for (-) strand. One of c("center",
"center_unstranded", "left", "left_unstranded"). Default is "center".}

\item{summary_FUN}{function. used to aggregate score by tile.  must accept
x=score and w=width numeric vectors as only arguments. default is
weighted.mean.  limma::weighted.median is a good alternative.}

\item{score_gr}{GRanges with a "score" metadata column.}
}
\value{
data.table that is GRanges compatible
}
\description{
This function is most appropriate where features are expected to vary greatly
in size and feature boundaries are important, ie. gene bodies, enhancers or
TADs.
}
\details{
Columns in output data.table are: standard GRanges columns: seqnames, start,
end, width, strand id - matched to names(score_gr). if names(score_gr) is
missing, added as 1:length(score_gr) y - value of score from score_gr x -
relative bp position
}
\examples{
bam_file = system.file("extdata/test.bam",
    package = "seqsetvis")
qgr = CTCF_in_10a_overlaps_gr[1:5]
# unlike viewGRangesWinSample_dt, width is not fixed
# qgr = GenomicRanges::resize(qgr, width = 500, fix = "center")
bam_gr = seqsetvis:::fetchBam(bam_file, qgr)
bam_dt = viewGRangesWinSummary_dt(bam_gr, qgr, 50)

if(Sys.info()['sysname'] != "Windows"){
    bw_file = system.file("extdata/MCF10A_CTCF_FE_random100.bw",
        package = "seqsetvis")
    bw_gr = rtracklayer::import.bw(bw_file, which = qgr)
    bw_dt = viewGRangesWinSummary_dt(bw_gr, qgr, 50)
}
}
